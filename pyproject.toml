[tool.poetry]
name = "gammaloop"
version = "0.2.0"
description = "Gammaloop computes differential cross-sections using Local Unitarity"
authors = [
  "Valentin Hirschi <valentin.hirschi@gmail.com>",
  "Mathijs Fraaije <mathijsfraaije@gmail.com>",
  "Lucien Huber <mail@lcnbr.ch>",
]

[tool.poetry.dependencies]
python = "^3.12"
pytest = "^7.4.2"
autopep8 = "^2.0.4"
pyaml = "^23.12.0"
pyright = "^1.1.367"
pymupdf = "^1.24.5"
pytest-profiling = "^1.7.0"
pyyaml = "^6.0.1"
pydot = "^3.0.1"

[tool.poetry.dev-dependencies]
PyYAML = "^6.0.1"
symbolica = "^0.12.1"

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "gammaloop"
version = "0.2.0"
description = "Gammaloop computes differential cross-sections using Local Unitarity"
readme = "README.md"
license = { file = "LICENSE.md" }
keywords = ["physics", "collider", "cross-section", "perturbative", "loop"]
authors = [
  { name = "Valentin Hirschi", email = "valentin.hirschi@gmail.com" },
  { name = "Mathijs Fraaije", email = "mathijsfraaije@gmail.com" },
  { name = "Lucien Huber", email = "mail@lcnbr.ch" },
]

dependencies = ["PyYAML>=6.0.1", "PyMuPDF>=1.23.4", "pydot>=3.0.1"]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Rust",
  "Topic :: Scientific/Engineering :: Physics",
]

[project.urls]
homepage = "https://alphaloop.ch"
repository = "https://github.com/alphal00p/gammaloop"

[tool.maturin]
features = ["python_api"]
python-source = "python"
module-name = "gammaloop._gammaloop"
sdist-include = ["LICENSE.md", "README.md"]
exclude = [
  "gammaloop/dependencies/LOCK",
  "gammaloop/dependencies/INSTALLED",
  "gammaloop/dependencies/dependency_build.log",
  "gammaloop/dependencies/venv",
  "gammaloop/dependencies/venv/**",
  "gammaloop/dependencies/symbolica/symbolica_path.txt",  
]
include = [
  "gammaloop/.pytest_cache/v/test_runtimes",
  "gammaloop/tests/test_data/graph_inputs",
  "gammaloop/tests/test_data/graph_inputs/*",
  "gammaloop/examples/cards",
  "gammaloop/examples/cards/*",
  "gammaloop/dependencies/test_quad_math",
  "gammaloop/dependencies/test_quad_math/test_quad_math.c"
]

[project.scripts]
gammaloop_rust_cli = "gammaloop._gammaloop:rust_cli"
gammaloop = "gammaloop:cli"

[tool.pytest.ini_options]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "rust: marks test for rust interop (deselect with '-m \"not rust\"')",
  "codecheck: marks tests about type checking and rust coding style (clippy) (deselect with '-m \"not codecheck\"')",
  "drawing: marks tests about rendering graphs (deselect with '-m \"not drawing\"')",
]

[tool.mypy]
disable_error_code = "no-redef"
check_untyped_defs = true
exclude = [
  'python/gammaloop/data/templates/drawing/combine_pages.py',
  'python/gammaloop/data/models/*',
]

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pydot.*"
ignore_missing_imports = true

[tool.pyright]
include = ["python/gammaloop"]
exclude = [
  "python/gammaloop/data/templates/drawing/combine_pages.py",
  "python/gammaloop/data/models/*",
  "python/gammaloop/tests/test_data/models/*",
  "python/gammaloop/examples/cards/*",
  "python/gammaloop/dependencies/*",
  "python/gammaloop/_gammaloop.so",
  "python/gammaloop/requirements.txt",
  "python/gammaloop/run_python_tests.sh",
]
