### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
# C extensions
*.so
# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

out.yaml
outmap.yaml
params.yaml
find-baseline.svg
*.data
*.old
eval.cpp
evaluate.cpp
perf.data
# logos
logos/

# C compiled objects
*.o

# Ignore swap files
*.swp

# ignore vscode repo
.vscode

# compiled library
*.a
*.dylib

# ignore gammaLoop cards
*.gL

# ignore dot files as they are usually for testing only
*.dot

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# GammaLoop test outputs
TEST_OUTPUT*/


# General ignored directory
ignore/

src/test_resources/gammaloop_models/*.dat

src/test_resources/trees

GL_OUTPUT*

src/test_resources/TEST_AMPLITUDE_*
# Sadly this does not work because the exclusion above is for an entire directory
!src/test_resources/TEST_AMPLITUDE_*/GL_OUTPUT/output_metadata.yaml
!src/test_resources/TEST_AMPLITUDE_*/GL_OUTPUT/sources/amplitudes/*/amplitude.yaml

src/test_resources/TEST_CROSS_SECTION_*
# Sadly this does not work because the exclusion above is for an entire directory
!src/test_resources/TEST_CROSS_SECTION_*/GL_OUTPUT/output_metadata.yaml
!src/test_resources/TEST_CROSS_SECTION_*/GL_OUTPUT/sources/cross_sections/*/cross_section.yaml

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

*.pkl

# dependencies
python/gammaloop/dependencies/LOCK
python/gammaloop/dependencies/INSTALLED
python/gammaloop/dependencies/dependency_build.log
python/gammaloop/dependencies/venv/
python/gammaloop/dependencies/symbolica/
python/gammaloop/dependencies/test_quad_math/

# Translations
*.mo
*.pot

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.devenv
.direnv
.envrc

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# LSP config files
pyrightconfig.json

### Rust ###
# Generated by Cargo
# will have compiled files and executables
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

poetry.lock

# Target directory of rust tests
rust_test_binaries

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb
default.nix

# latex logs
*.log
# End of https://www.toptal.com/developers/gitignore/api/rust,python

# Ignore the local test resources
src/test_resources/qqddg/


# Ignore the local compiled numerators 
/*.cpp
/*.so


# Ignore tmp compiled files:

TMP_COMPILED/
# My own process outputs
process_outputs
ignore/
# the default log file
log.glog/
